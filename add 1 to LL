class Solution {
    // Reverse the linked list
    private Node reverse(Node head) {
        Node prev = null, curr = head;
        while (curr != null) {
            Node nextNode = curr.next;
            curr.next = prev;
            prev = curr;
            curr = nextNode;
        }
        return prev;
    }

    public Node addOne(Node head) {
        // Step 1: Reverse the linked list
        head = reverse(head);
        
        // Step 2: Add one to the number
        Node curr = head;
        int carry = 1;
        while (curr != null) {
            int sum = curr.data + carry;
            curr.data = sum % 10;
            carry = sum / 10;
            
            if (curr.next == null && carry > 0) {
                curr.next = new Node(carry);
                carry = 0;
            }
            curr = curr.next;
        }
        
        // Step 3: Reverse back and return
        return reverse(head);
    }
}
