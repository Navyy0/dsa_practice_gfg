import java.util.*;

class Solution {
    public int minimumMultiplications(int[] arr, int start, int end) {
        int mod = 100000;
        Queue<int[]> queue = new LinkedList<>();
        queue.offer(new int[]{start, 0});
        
        boolean[] visited = new boolean[mod];
        visited[start] = true;
        
        while (!queue.isEmpty()) {
            int[] current = queue.poll();
            int currentVal = current[0];
            int steps = current[1];
            
            if (currentVal == end) {
                return steps;
            }
            
            for (int num : arr) {
                int nextVal = (currentVal * num) % mod;
                if (!visited[nextVal]) {
                    visited[nextVal] = true;
                    queue.offer(new int[]{nextVal, steps + 1});
                }
            }
        }
        
        return -1;
    }
}
