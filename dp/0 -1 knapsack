 int n = val.length;
        int dp[][] = new int[n+1][W+1];

        for(int i = 0; i <= n; i++){
            for(int j = 0; j <= W; j++){
                if(i == 0 || j == 0) {
                    dp[i][j] = 0; // Base case
                } else {
                    int v = val[i-1];
                    int w = wt[i-1];  // Corrected index
                    if(w <= j){
                        int incluprofit = v + dp[i-1][j-w];
                        int notincluprofit = dp[i-1][j];
                        dp[i][j] = Math.max(incluprofit, notincluprofit);
                    } else {
                        dp[i][j] = dp[i-1][j];
                    }
                }
            }
        }
        return dp[n][W];
